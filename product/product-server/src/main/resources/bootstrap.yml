spring:
  application:
    name: PRODUCT
  # 当然也可以把这个配置在github上，但是这样的话，会导致ConfigServicePropertySourceLocator后的日志才打印出来
  profiles:
    active: dev
  cloud:
    config:
      discovery:
        enabled: true
        # config-client会去eureka上找配置里的service-id，这里配置的是config-server，所以会去找名称为“config-server”的服务，
        # 找不到的话，会把127.0.0.1:8888当成config-server
        service-id: CONFIG-SERVER
      profile: dev

#  redis:
#    # 连接超时时间
#    timeout: 3000
#    cluster:
#      nodes:
#        - 127.0.0.1:6379
#        - 127.0.0.1:6380
#        - 127.0.0.1:6381
#        - 127.0.0.1:6382
#        - 127.0.0.1:6383
#        - 127.0.0.1:6384
#      # 最大的要重定向的次数（由于集群中数据存储在多个节点所以，在访问数据时需要通过节点进行转发）
#      max-redirects: 3
#    jedis:
#      pool:
#        # 最大连接数
#        max-active: 300
#        # 最大空闲连接数
#        max-idle: 100
#        # 最小空闲连接数
#        min-idle: 20

# eureka 配置
eureka:
  instance:
    # 健康检查的url（默认值是/actuator/health，不配置也一样）
    health-check-url-path: /actuator/health
    # 状态值的url（默认值是/actuator/info，不配置也一样）
    status-page-url-path: /actuator/info
    # 主页的URL（默认值是/，不配置也一样）
    home-page-url-path: /
    # 客户端向注册中心发送心跳的间隔时间，单位s，默认值：30s
    lease-renewal-interval-in-seconds: 30
    # eureka 上的 status的名称这里配置的是：应用名:端口号
    instance-id: ${spring.application.name}:${server.port}
    metadata-map:
      startup: ${random.int}
  client:
    service-url:
      default-zone: http://localhost:8761/eureka/